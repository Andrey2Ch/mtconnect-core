import { AdamClient } from './AdamClient';

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ADAM-6050 –∫–ª–∏–µ–Ω—Ç–∞
 * –ó–∞–ø—É—Å–∫: npm run dev
 */
async function testAdamClient() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ADAM-6050 –∫–ª–∏–µ–Ω—Ç–∞');
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é localhost –¥–ª—è —Ç–µ—Å—Ç–æ–≤)
    const client = new AdamClient('192.168.1.100', 502);
    
    try {
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        console.log('\nüì° –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
        await client.connect();
        
        // –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
        console.log('\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–µ —á—Ç–µ–Ω–∏–µ (–∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã)');
        console.log('–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');
        
        let counter = 0;
        const interval = setInterval(async () => {
            try {
                counter++;
                console.log(`\n--- –ß—Ç–µ–Ω–∏–µ #${counter} ---`);
                
                // –ß–∏—Ç–∞–µ–º Digital Inputs
                const inputs = await client.readDigitalInputs();
                console.log('üì• Digital Inputs:', inputs.map((val, idx) => `DI${idx}:${val ? '1' : '0'}`).join(' '));
                
                // –ß–∏—Ç–∞–µ–º Digital Outputs  
                const outputs = await client.readDigitalOutputs();
                console.log('üì§ Digital Outputs:', outputs.map((val, idx) => `DO${idx}:${val ? '1' : '0'}`).join(' '));
                
                console.log(`üîó –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${client.isConnected ? '‚úÖ –û–Ω–ª–∞–π–Ω' : '‚ùå –û—Ñ—Ñ–ª–∞–π–Ω'}`);
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è:', error);
            }
        }, 2000);
        
        // Graceful shutdown
        process.on('SIGINT', async () => {
            console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
            clearInterval(interval);
            await client.disconnect();
            console.log('üëã –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
            process.exit(0);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
        console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
        console.log('   ‚Ä¢ ADAM-6050 –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ç–∏');
        console.log('   ‚Ä¢ IP –∞–¥—Ä–µ—Å 192.168.1.100 –¥–æ—Å—Ç—É–ø–µ–Ω');
        console.log('   ‚Ä¢ –ü–æ—Ä—Ç 502 –æ—Ç–∫—Ä—ã—Ç');
        console.log('   ‚Ä¢ Modbus TCP –≤–∫–ª—é—á–µ–Ω –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ');
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testAdamClient(); 